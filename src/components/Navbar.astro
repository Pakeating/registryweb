---
import StorageSelector from './StorageSelector.astro';
---
<header class="navbar">
    <div class="navbar-container">
        <div class="brand">
            <a href="/">MealApp</a>
        </div>
        
        <button class="menu-toggle" id="menu-toggle" aria-label="Toggle menu" aria-controls="nav-links" aria-expanded="false">
            <svg class="hamburger-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
            <svg class="close-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
        </button>

        <nav class="nav-links" id="nav-links">
            
            <a href="/" class="nav-link">Registrar Comida</a>
            <a href="/stats" class="nav-link">Estad√≠sticas</a>
            <div class="storage-selector-container">
              <StorageSelector />
            </div>
            <a class="nav-link">Cerrar Sesion</a>
        </nav>
    </div>
</header>

<style>
    :root {
        --primary-color: #F5F5F4; /* stone-100 */
        --secondary-color: #FFFFFF; /* white */
        --text-primary-color: #1C1917; /* stone-900 */
        --text-secondary-color: #44403C; /* stone-700 */
        --border-color: #D6D3D1; /* stone-300 */
    }

    .navbar {
        background-color: var(--secondary-color);
        border-bottom: 1px solid var(--border-color);
        box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.05);
        padding: 1rem 2rem;
        position: relative; /* Context for the mobile menu */
    }

    .navbar-container {
        max-width: 72rem; /* max-w-7xl */
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .brand a {
        font-size: 1.5rem; /* text-2xl */
        font-weight: 700;
        color: var(--text-primary-color);
        text-decoration: none;
    }

    .nav-links {
        display: flex;
        align-items: center; /* Align items vertically */
        gap: 2rem; /* gap-8 */
    }

    .nav-link {
        font-size: 1rem;
        font-weight: 500;
        color: var(--text-secondary-color);
        text-decoration: none;
        transition: color 0.2s;
    }

    .nav-link:hover {
        color: var(--text-primary-color);
    }

    .menu-toggle {
        display: none; /* Hidden on desktop */
        background: none;
        border: none;
        cursor: pointer;
        padding: 0;
        z-index: 1000;
        color: var(--text-primary-color);
    }
    
    .menu-toggle .close-icon {
        display: none;
    }

    .menu-toggle.is-open .hamburger-icon {
        display: none;
    }
    
    .menu-toggle.is-open .close-icon {
        display: block;
    }

    /* --- Responsive Styles --- */
    @media (max-width: 768px) {
        .menu-toggle {
            display: block; /* Show hamburger button */
        }

        .nav-links {
            display: none; /* Hide nav links by default on mobile */
            position: absolute;
            top: 100%; /* Position right below the navbar */
            left: 0;
            right: 0;
            background-color: var(--secondary-color);
            width: 100%;
            flex-direction: column;
            align-items: center;
            gap: 1.5rem;
            padding: 2rem 0;
            border-bottom: 1px solid var(--border-color);
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.07);
        }

        .nav-links.is-open {
            display: flex; /* Show menu when active */
        }
        
        .storage-selector-container {
            margin-top: 1rem; /* Add some space in mobile view */
        }
    }
</style>

<script>
    const menuToggle = document.getElementById('menu-toggle');
    const navLinks = document.getElementById('nav-links');

    if (menuToggle && navLinks) {
        menuToggle.addEventListener('click', () => {
            // Toggle the 'is-open' class on both the button and the nav links
            const isOpen = menuToggle.classList.toggle('is-open');
            navLinks.classList.toggle('is-open');
            
            // Update aria-expanded for accessibility
            menuToggle.setAttribute('aria-expanded', String(isOpen));
        });
    }
</script>
